package openapi

// This file was automatically generated by genbuilders.go on 2018-05-20T21:56:43+09:00
// DO NOT EDIT MANUALLY. All changes will be lost

import (
	"encoding/json"
	"github.com/pkg/errors"
)

var _ = errors.Cause

type callbackMarshalProxy struct {
	URLs map[string]PathItem ``
}

type callbackUnmarshalProxy struct {
	URLs map[string]json.RawMessage ``
}

func (v *callback) MarshalJSON() ([]byte, error) {
	var proxy callbackMarshalProxy
	proxy.URLs = v.uRLs
	return json.Marshal(proxy)
}

func (v *callback) UnmarshalJSON(data []byte) error {
	var proxy callbackUnmarshalProxy
	if err := json.Unmarshal(data, &proxy); err != nil {
		return err
	}

	if len(proxy.URLs) > 0 {
		m := make(map[string]PathItem)
		for key, pv := range proxy.URLs {
			var decoded pathItem
			if err := json.Unmarshal(pv, &decoded); err != nil {
				return errors.Wrapf(err, `failed to unmasrhal element %s of field URLs`, key)
			}
			m[key] = &decoded
		}
		v.uRLs = m
	}
	return nil
}
