package openapi

// This file was automatically generated by genbuilders.go on 2018-05-20T20:06:19+09:00
// DO NOT EDIT MANUALLY. All changes will be lost

import (
	"encoding/json"
	"github.com/pkg/errors"
)

var _ = errors.Cause

type operationMarshalProxy struct {
	Verb         string                `json:"-"`
	Tags         []string              `json:"tags,omitempty"`
	Summary      string                `json:"summary,omitempty"`
	Description  string                `json:"description,omitempty"`
	ExternalDocs ExternalDocumentation `json:"externalDocs,omitempty"`
	OperationID  string                `json:"operationId,omitempty"`
	Parameters   []Parameter           `json:"parameters,omitempty"`
	RequestBody  RequestBody           `json:"requestBody,omitempty"`
	Responses    Responses             `json:"responses" builder:"required"`
	Callbacks    map[string]Callback   `json:"callbacks,omitempty"`
	Deprecated   bool                  `json:"deprecated,omitempty"`
	Security     []SecurityRequirement `json:"security,omitempty"`
	Servers      []Server              `json:"servers,omitempty"`
}

type operationUnmarshalProxy struct {
	Verb         string                `json:"-"`
	Tags         []string              `json:"tags,omitempty"`
	Summary      string                `json:"summary,omitempty"`
	Description  string                `json:"description,omitempty"`
	ExternalDocs json.RawMessage       `json:"externalDocs,omitempty"`
	OperationID  string                `json:"operationId,omitempty"`
	Parameters   []Parameter           `json:"parameters,omitempty"`
	RequestBody  json.RawMessage       `json:"requestBody,omitempty"`
	Responses    json.RawMessage       `json:"responses" builder:"required"`
	Callbacks    map[string]Callback   `json:"callbacks,omitempty"`
	Deprecated   bool                  `json:"deprecated,omitempty"`
	Security     []SecurityRequirement `json:"security,omitempty"`
	Servers      []Server              `json:"servers,omitempty"`
}

func (v *operation) MarshalJSON() ([]byte, error) {
	var proxy operationMarshalProxy
	proxy.Verb = v.verb
	proxy.Tags = v.tags
	proxy.Summary = v.summary
	proxy.Description = v.description
	proxy.ExternalDocs = v.externalDocs
	proxy.OperationID = v.operationID
	proxy.Parameters = v.parameters
	proxy.RequestBody = v.requestBody
	proxy.Responses = v.responses
	proxy.Callbacks = v.callbacks
	proxy.Deprecated = v.deprecated
	proxy.Security = v.security
	proxy.Servers = v.servers
	return json.Marshal(proxy)
}

func (v *operation) UnmarshalJSON(data []byte) error {
	var proxy operationUnmarshalProxy
	if err := json.Unmarshal(data, &proxy); err != nil {
		return err
	}
	v.verb = proxy.Verb
	v.tags = proxy.Tags
	v.summary = proxy.Summary
	v.description = proxy.Description

	if len(proxy.ExternalDocs) > 0 {
		var decoded externalDocumentation
		if err := json.Unmarshal(proxy.ExternalDocs, &decoded); err != nil {
			return errors.Wrap(err, `failed to unmarshal field ExternalDocs`)
		}

		v.externalDocs = &decoded
	}
	v.operationID = proxy.OperationID
	v.parameters = proxy.Parameters

	if len(proxy.RequestBody) > 0 {
		var decoded requestBody
		if err := json.Unmarshal(proxy.RequestBody, &decoded); err != nil {
			return errors.Wrap(err, `failed to unmarshal field RequestBody`)
		}

		v.requestBody = &decoded
	}

	if len(proxy.Responses) > 0 {
		var decoded responses
		if err := json.Unmarshal(proxy.Responses, &decoded); err != nil {
			return errors.Wrap(err, `failed to unmarshal field Responses`)
		}

		v.responses = &decoded
	}
	v.callbacks = proxy.Callbacks
	v.deprecated = proxy.Deprecated
	v.security = proxy.Security
	v.servers = proxy.Servers
	return nil
}
