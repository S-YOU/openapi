package openapi

// This file was automatically generated by genbuilders.go on 2018-05-20T21:56:43+09:00
// DO NOT EDIT MANUALLY. All changes will be lost

import (
	"encoding/json"
	"github.com/pkg/errors"
)

var _ = errors.Cause

type oAuthFlowMarshalProxy struct {
	AuthorizationURL string            `json:"authorizationUrl" yaml:"authorizationUrl"`
	TokenURL         string            `json:"tokenUrl" yaml:"tokenUrl"`
	RefreshURL       string            `json:"refreshUrl" yaml:"refreshUrl"`
	Scopes           map[string]string `json:"scopes" yaml:"scopes"`
}

type oAuthFlowUnmarshalProxy struct {
	AuthorizationURL string `json:"authorizationUrl" yaml:"authorizationUrl"`
	TokenURL         string `json:"tokenUrl" yaml:"tokenUrl"`
	RefreshURL       string `json:"refreshUrl" yaml:"refreshUrl"`
}

func (v *oAuthFlow) MarshalJSON() ([]byte, error) {
	var proxy oAuthFlowMarshalProxy
	proxy.AuthorizationURL = v.authorizationURL
	proxy.TokenURL = v.tokenURL
	proxy.RefreshURL = v.refreshURL
	proxy.Scopes = v.scopes
	return json.Marshal(proxy)
}

func (v *oAuthFlow) UnmarshalJSON(data []byte) error {
	var proxy oAuthFlowUnmarshalProxy
	if err := json.Unmarshal(data, &proxy); err != nil {
		return err
	}
	v.authorizationURL = proxy.AuthorizationURL
	v.tokenURL = proxy.TokenURL
	v.refreshURL = proxy.RefreshURL
	return nil
}
