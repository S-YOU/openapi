package openapi

// This file was automatically generated by gentypes.go
// DO NOT EDIT MANUALLY. All changes will be lost

import (
	"log"
)

var _ = log.Printf

// ItemsMutator is used to build an instance of Items. The user must
// call `Do()` after providing all the necessary information to
// the new instance of Items with new values
type ItemsMutator struct {
	proxy  *items
	target *items
}

// Do finalizes the matuation process for Items and returns the result
func (b *ItemsMutator) Do() error {
	*b.target = *b.proxy
	return nil
}

// MutateItems creates a new mutator object for Items
func MutateItems(v Items) *ItemsMutator {
	return &ItemsMutator{
		target: v.(*items),
		proxy:  v.Clone().(*items),
	}
}

// Type sets the Type field for object Items.
func (m *ItemsMutator) Type(v PrimitiveType) *ItemsMutator {
	m.proxy.typ = v
	return m
}

// Format sets the Format field for object Items.
func (m *ItemsMutator) Format(v string) *ItemsMutator {
	m.proxy.format = v
	return m
}

// Items sets the Items field for object Items.
func (m *ItemsMutator) Items(v Items) *ItemsMutator {
	m.proxy.items = v
	return m
}

// CollectionFormat sets the CollectionFormat field for object Items.
func (m *ItemsMutator) CollectionFormat(v CollectionFormat) *ItemsMutator {
	m.proxy.collectionFormat = v
	return m
}

// DefaultValue sets the DefaultValue field for object Items.
func (m *ItemsMutator) DefaultValue(v interface{}) *ItemsMutator {
	m.proxy.defaultValue = v
	return m
}

// Maximum sets the Maximum field for object Items.
func (m *ItemsMutator) Maximum(v float64) *ItemsMutator {
	m.proxy.maximum = v
	return m
}

// ExclusiveMaximum sets the ExclusiveMaximum field for object Items.
func (m *ItemsMutator) ExclusiveMaximum(v float64) *ItemsMutator {
	m.proxy.exclusiveMaximum = v
	return m
}

// Minimum sets the Minimum field for object Items.
func (m *ItemsMutator) Minimum(v float64) *ItemsMutator {
	m.proxy.minimum = v
	return m
}

// ExclusiveMinimum sets the ExclusiveMinimum field for object Items.
func (m *ItemsMutator) ExclusiveMinimum(v float64) *ItemsMutator {
	m.proxy.exclusiveMinimum = v
	return m
}

// MaxLength sets the MaxLength field for object Items.
func (m *ItemsMutator) MaxLength(v int) *ItemsMutator {
	m.proxy.maxLength = v
	return m
}

// MinLength sets the MinLength field for object Items.
func (m *ItemsMutator) MinLength(v int) *ItemsMutator {
	m.proxy.minLength = v
	return m
}

// Pattern sets the Pattern field for object Items.
func (m *ItemsMutator) Pattern(v string) *ItemsMutator {
	m.proxy.pattern = v
	return m
}

// MaxItems sets the MaxItems field for object Items.
func (m *ItemsMutator) MaxItems(v int) *ItemsMutator {
	m.proxy.maxItems = v
	return m
}

// MinItems sets the MinItems field for object Items.
func (m *ItemsMutator) MinItems(v int) *ItemsMutator {
	m.proxy.minItems = v
	return m
}

// UniqueItems sets the UniqueItems field for object Items.
func (m *ItemsMutator) UniqueItems(v bool) *ItemsMutator {
	m.proxy.uniqueItems = v
	return m
}

func (m *ItemsMutator) ClearEnum() *ItemsMutator {
	m.proxy.enum.Clear()
	return m
}

func (m *ItemsMutator) Enum(value interface{}) *ItemsMutator {
	m.proxy.enum = append(m.proxy.enum, value)
	return m
}

// MultipleOf sets the MultipleOf field for object Items.
func (m *ItemsMutator) MultipleOf(v float64) *ItemsMutator {
	m.proxy.multipleOf = v
	return m
}
func (b *ItemsMutator) Extension(name string, value interface{}) *ItemsMutator {
	if b.proxy.extensions == nil {
		b.proxy.extensions = Extensions{}
	}
	b.proxy.extensions[name] = value
	return b
}
