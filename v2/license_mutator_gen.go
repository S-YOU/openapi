package openapi

// This file was automatically generated by gentypes.go
// DO NOT EDIT MANUALLY. All changes will be lost

import (
	"log"
)

var _ = log.Printf

// LicenseMutator is used to build an instance of License. The user must
// call `Do()` after providing all the necessary information to
// the new instance of License with new values
type LicenseMutator struct {
	proxy  *license
	target *license
}

// Do finalizes the matuation process for License and returns the result
func (m *LicenseMutator) Do() error {
	*m.target = *m.proxy
	return nil
}

// MutateLicense creates a new mutator object for License
func MutateLicense(v License) *LicenseMutator {
	return &LicenseMutator{
		target: v.(*license),
		proxy:  v.Clone().(*license),
	}
}

// Name sets the Name field for object License.
func (m *LicenseMutator) Name(v string) *LicenseMutator {
	m.proxy.name = v
	return m
}

// URL sets the URL field for object License.
func (m *LicenseMutator) URL(v string) *LicenseMutator {
	m.proxy.url = v
	return m
}

// Extension sets an arbitrary extension field in License
func (m *LicenseMutator) Extension(name string, value interface{}) *LicenseMutator {
	if m.proxy.extensions == nil {
		m.proxy.extensions = Extensions{}
	}
	m.proxy.extensions[name] = value
	return m
}
