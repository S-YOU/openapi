package openapi

// This file was automatically generated by gentyeps.go
// DO NOT EDIT MANUALLY. All changes will be lost

import (
	"log"
)

var _ = log.Printf

// SecuritySchemeMutator is used to build an instance of SecurityScheme. The user must
// call `Do()` after providing all the necessary information to
// the new instance of SecurityScheme with new values
type SecuritySchemeMutator struct {
	proxy  *securityScheme
	target *securityScheme
}

// Do finalizes the matuation process for SecurityScheme and returns the result
func (b *SecuritySchemeMutator) Do() error {
	*b.target = *b.proxy
	return nil
}

// MutateSecurityScheme creates a new mutator object for SecurityScheme
func MutateSecurityScheme(v SecurityScheme) *SecuritySchemeMutator {
	return &SecuritySchemeMutator{
		target: v.(*securityScheme),
		proxy:  v.Clone().(*securityScheme),
	}
}

// Type sets the Type field for object SecurityScheme.
func (b *SecuritySchemeMutator) Type(v string) *SecuritySchemeMutator {
	b.proxy.typ = v
	return b
}

// Description sets the Description field for object SecurityScheme.
func (b *SecuritySchemeMutator) Description(v string) *SecuritySchemeMutator {
	b.proxy.description = v
	return b
}

// Name sets the Name field for object SecurityScheme.
func (b *SecuritySchemeMutator) Name(v string) *SecuritySchemeMutator {
	b.proxy.name = v
	return b
}

// In sets the In field for object SecurityScheme.
func (b *SecuritySchemeMutator) In(v string) *SecuritySchemeMutator {
	b.proxy.in = v
	return b
}

// Flow sets the Flow field for object SecurityScheme.
func (b *SecuritySchemeMutator) Flow(v string) *SecuritySchemeMutator {
	b.proxy.flow = v
	return b
}

// AuthorizationURL sets the AuthorizationURL field for object SecurityScheme.
func (b *SecuritySchemeMutator) AuthorizationURL(v string) *SecuritySchemeMutator {
	b.proxy.authorizationURL = v
	return b
}

// TokenURL sets the TokenURL field for object SecurityScheme.
func (b *SecuritySchemeMutator) TokenURL(v string) *SecuritySchemeMutator {
	b.proxy.tokenURL = v
	return b
}

func (b *SecuritySchemeMutator) ClearScopes() *SecuritySchemeMutator {
	b.proxy.scopes.Clear()
	return b
}

func (b *SecuritySchemeMutator) Scope(key StringMapKey, value string) *SecuritySchemeMutator {
	if b.proxy.scopes == nil {
		b.proxy.scopes = StringMap{}
	}

	b.proxy.scopes[key] = value
	return b
}
func (b *SecuritySchemeMutator) Extension(name string, value interface{}) *SecuritySchemeMutator {
	if b.proxy.extensions == nil {
		b.proxy.extensions = Extensions{}
	}
	b.proxy.extensions[name] = value
	return b
}
