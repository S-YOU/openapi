package openapi

// This file was automatically generated by gentyeps.go on 2018-05-29T20:40:48+09:00
// DO NOT EDIT MANUALLY. All changes will be lost

import (
	"github.com/pkg/errors"
)

var _ = errors.Cause

// XMLBuilder is used to build an instance of XML. The user must
// call `Do()` after providing all the necessary information to
// build an instance of XML
type XMLBuilder struct {
	target *xml
}

// Do finalizes the building process for XML and returns the result
func (b *XMLBuilder) Do() (XML, error) {
	if err := b.target.Validate(); err != nil {
		return nil, errors.Wrap(err, `validation failed`)
	}
	return b.target, nil
}

// NewXML creates a new builder object for XML
func NewXML() *XMLBuilder {
	return &XMLBuilder{
		target: &xml{},
	}
}

// Name sets the Name field for object XML.
func (b *XMLBuilder) Name(v string) *XMLBuilder {
	b.target.name = v
	return b
}

// Namespace sets the Namespace field for object XML.
func (b *XMLBuilder) Namespace(v string) *XMLBuilder {
	b.target.namespace = v
	return b
}

// Prefix sets the Prefix field for object XML.
func (b *XMLBuilder) Prefix(v string) *XMLBuilder {
	b.target.prefix = v
	return b
}

// Attribute sets the Attribute field for object XML.
func (b *XMLBuilder) Attribute(v bool) *XMLBuilder {
	b.target.attribute = v
	return b
}

// Wrapped sets the Wrapped field for object XML.
func (b *XMLBuilder) Wrapped(v bool) *XMLBuilder {
	b.target.wrapped = v
	return b
}

// Reference sets the $ref (reference) field for object XML.
func (b *XMLBuilder) Reference(v string) *XMLBuilder {
	b.target.reference = v
	return b
}
